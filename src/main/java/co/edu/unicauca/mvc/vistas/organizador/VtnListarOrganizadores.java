/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package co.edu.unicauca.mvc.vistas.organizador;

import co.edu.unicauca.mvc.controladores.OrganizadorServicio;
import co.edu.unicauca.mvc.modelos.Organizador;
import java.util.LinkedList;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mary
 */

/**
 * Clase VtnListarOrganizadores.
 * 
 * Esta clase representa una ventana interna para listar organizadores en la aplicación.
 * Permite visualizar, actualizar y registrar nuevos organizadores.
 */

public class VtnListarOrganizadores extends javax.swing.JInternalFrame {
 private OrganizadorServicio objServicioAlmacenamientoOrganizadores;
    
     /**
     * Constructor de la clase VtnListarOrganizadores.
     * 
     * Inicializa la ventana y asigna el servicio de organizadores.
     * 
     * @param objServicioAlmacenamientoOrganizadores Instancia del servicio de organizadores.
     */
 
    public VtnListarOrganizadores(OrganizadorServicio objServicioAlmacenamientoOrganizadores) {
        // Inicializa los componentes de la ventana.
        initComponents();
        this.objServicioAlmacenamientoOrganizadores =objServicioAlmacenamientoOrganizadores;
        // Llama al método para inicializar la tabla de organizadores.
        iniciarlizarTabla();
    }
    
    /**
     * Inicializa la tabla que mostrará la lista de organizadores.
     * 
     * Crea un modelo de tabla con columnas específicas para los datos de los organizadores.
     */
    
    private void iniciarlizarTabla()
    {
       DefaultTableModel model= new DefaultTableModel();       
       model.addColumn("Nombre Organizador");       
       model.addColumn("Apellido Organizador");
       model.addColumn("Universidad");
       this.jTableListadoOrganizadores.setModel(model);
    }
    
    /**
     * Limpia los datos de la tabla de organizadores.
     * 
     * Elimina todas las filas de la tabla para poder volver a llenarla con nuevos datos.
     */
    
    public void limpiarTabla() {
        DefaultTableModel modelo = (DefaultTableModel) this.jTableListadoOrganizadores.getModel();
        int filas = this.jTableListadoOrganizadores.getRowCount();
        for (int i = 0; filas > i; i++) {
            modelo.removeRow(0);
        }        
    }
    
    /**
     * Llena la tabla con la lista de organizadores.
     * 
     * Limpia la tabla actual y la llena con datos de organizadores obtenidos del servicio.
     */
    private void llenarTabla() {
        DefaultTableModel model = (DefaultTableModel) this.jTableListadoOrganizadores.getModel();
        limpiarTabla();
        LinkedList<Organizador> listaOrganizadores = (LinkedList<Organizador>) this.objServicioAlmacenamientoOrganizadores.listarOrganizador();
        // Agrega los datos de cada organizador a la tabla.
        for (int i = 0; i < listaOrganizadores.size(); i++) {
            String[] fila = { 
                listaOrganizadores.get(i).getNombre(), 
                listaOrganizadores.get(i).getApellido(), 
                listaOrganizadores.get(i).getUniversidad()
            };
            model.addRow(fila);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelSuperior = new javax.swing.JPanel();
        jLabelTitulo = new javax.swing.JLabel();
        jPanelInferior = new javax.swing.JPanel();
        jPanelCentral = new javax.swing.JPanel();
        jButtonActualizar = new javax.swing.JButton();
        jButtonRegistrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListadoOrganizadores = new javax.swing.JTable();

        setBorder(null);
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabelTitulo.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabelTitulo.setText("Listar Organizadores");

        javax.swing.GroupLayout jPanelSuperiorLayout = new javax.swing.GroupLayout(jPanelSuperior);
        jPanelSuperior.setLayout(jPanelSuperiorLayout);
        jPanelSuperiorLayout.setHorizontalGroup(
            jPanelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSuperiorLayout.createSequentialGroup()
                .addContainerGap(205, Short.MAX_VALUE)
                .addComponent(jLabelTitulo)
                .addContainerGap(205, Short.MAX_VALUE))
        );
        jPanelSuperiorLayout.setVerticalGroup(
            jPanelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSuperiorLayout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanelSuperior, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout jPanelInferiorLayout = new javax.swing.GroupLayout(jPanelInferior);
        jPanelInferior.setLayout(jPanelInferiorLayout);
        jPanelInferiorLayout.setHorizontalGroup(
            jPanelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 538, Short.MAX_VALUE)
        );
        jPanelInferiorLayout.setVerticalGroup(
            jPanelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelInferior, java.awt.BorderLayout.PAGE_END);

        jButtonActualizar.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jButtonActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/comunicacion.png"))); // NOI18N
        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jButtonRegistrar.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jButtonRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/cliente.png"))); // NOI18N
        jButtonRegistrar.setText("Registrar Organizadores");
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });

        jTableListadoOrganizadores.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTableListadoOrganizadores.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jTableListadoOrganizadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableListadoOrganizadores);

        javax.swing.GroupLayout jPanelCentralLayout = new javax.swing.GroupLayout(jPanelCentral);
        jPanelCentral.setLayout(jPanelCentralLayout);
        jPanelCentralLayout.setHorizontalGroup(
            jPanelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCentralLayout.createSequentialGroup()
                .addContainerGap(73, Short.MAX_VALUE)
                .addGroup(jPanelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelCentralLayout.createSequentialGroup()
                        .addComponent(jButtonActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRegistrar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        jPanelCentralLayout.setVerticalGroup(
            jPanelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCentralLayout.createSequentialGroup()
                .addGroup(jPanelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCentralLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButtonActualizar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCentralLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonRegistrar)))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanelCentral, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Maneja el evento de acción para el botón de actualizar.
     * 
     * Llama al método para llenar la tabla con los datos actualizados de organizadores.
     * 
     * @param evt Evento de acción que ocurre al presionar el botón.
     */
    
    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        llenarTabla();
    }//GEN-LAST:event_jButtonActualizarActionPerformed

        /**
     * Maneja el evento de acción para el botón de registrar organizador.
     * 
     * Abre la ventana para registrar un nuevo organizador.
     * 
     * @param evt Evento de acción que ocurre al presionar el botón.
     */
    
    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        VtnRegistrarOrganizadores objVtnRegistrarOrganizadores =  new VtnRegistrarOrganizadores(this.objServicioAlmacenamientoOrganizadores);
        // Configura la operación de cierre.
        objVtnRegistrarOrganizadores.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        objVtnRegistrarOrganizadores.setVisible(true); // Muestra la ventana para registrar organizadores.
    }//GEN-LAST:event_jButtonRegistrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JPanel jPanelCentral;
    private javax.swing.JPanel jPanelInferior;
    private javax.swing.JPanel jPanelSuperior;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableListadoOrganizadores;
    // End of variables declaration//GEN-END:variables
}
